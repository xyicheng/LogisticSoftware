@model LogisticSoftware.WebUI.Models.Entities.Supply

@{
    ViewBag.Title = "Маршрут поставки";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div id="content">
    <header>
        <h2>Маршрут поставки</h2>
    </header>
    <div class="lefted">
        <hr/>
        <dl class="dl-horizontal">
            <dt>
                @Html.DisplayNameFor(model => model.Target)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Target)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Date)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Date)
            </dd>

        </dl>
        <p>
           @Html.ActionLink("Редагувати маршрут", "Index", "PlaceOnTheRoutes", new { id = Model.SupplyId }, null) |
            @Html.ActionLink("Повернутись до списку", "Index")
        </p>
    </div>
    
    <script type="text/javascript">
        var map;
        var start;
        var end;

        function displayRoute() {

            var directionsDisplay = new google.maps.DirectionsRenderer(); // also, constructor can get "DirectionsRendererOptions" object
            directionsDisplay.setMap(map); // map should be already initialized.

            @if (Model.PlacesOnTheRoute != null && Model.PlacesOnTheRoute.Any())
            {
                var route = Model.PlacesOnTheRoute.OrderBy(p => p.NumberOnTheRoute).ToList();
                var start = route[0];
                var to = route[route.Count - 1];
                @:start = new google.maps.LatLng(@start.Place.Latitude, @start.Place.Longitude);
                @:end = new google.maps.LatLng(@to.Place.Latitude, @to.Place.Longitude);
                @:var waypoints = [
                for (var i = 1; i < route.Count - 1; i++)
                {
                    @:{
                    @:location:new google.maps.LatLng(@route[i].Place.Latitude, @route[i].Place.Longitude),
                    @:stopover: true
                    @:},
                }
                @: ]
            }

            var request = {
                origin: start,
                destination: end,
                waypoints: waypoints,
                travelMode: google.maps.TravelMode.DRIVING
            };
            var directionsService = new google.maps.DirectionsService();
            directionsService.route(request, function(response, status) {
                if (status == google.maps.DirectionsStatus.OK) {
                    directionsDisplay.setDirections(response);
                }
            });
        }

        function initialize() {
            var mapOptions = {
                center: start,
                zoom: 12,
                mapTypeId: google.maps.MapTypeId.ROADMAP
            };
            map = new google.maps.Map(document.getElementById("map_canvas"),
                mapOptions);

            displayRoute();
        }

        google.maps.event.addDomListener(window, 'load', initialize);
    </script>
    <div id="map_canvas" style="width: 900px; height: 550px; float: right;"></div>

</div>